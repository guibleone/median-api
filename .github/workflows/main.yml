name: Testing the web application

on: push

jobs:
  testing:
    runs-on: ubuntu-22.04
    environment: testing

    services:
      postgres:
        image: postgres:16.3
        env:
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: median-db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U myuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21.7.3'

      - name: Create .env file
        run: |
          echo 'JWT_SECRET=zjP9h6ZI5LoSKCRj' >> .env
          echo 'POSTGRES_USER=myuser' >> .env
          echo 'POSTGRES_PASSWORD=mypassword' >> .env
          echo 'DATABASE_URL=postgresql://myuser:mypassword@postgres:5432/median-db?schema=public' >> .env
          echo 'POSTGRES_DB=median-db' >> .env

      - name: Stop and remove existing containers
        run: |
          docker stop $(docker ps -a -q --filter ancestor=postgres:16.3 --format="{{.ID}}") || true
          docker rm $(docker ps -a -q --filter ancestor=postgres:16.3 --format="{{.ID}}") || true

      - name: Installing dependencies
        run: npm ci

      - name: Building the app
        run: npm run build

      - name: Set up web application
        run: |
          docker-compose up --build -d
          docker ps -a
          npx prisma migrate deploy

      - name: Unit tests
        run: npm run test

      - name: End-to-end tests
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Tear down
        if: always()
        run: docker-compose down
